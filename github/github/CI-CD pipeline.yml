# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - master
#   pull_request:
#     branches:
#       - master

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest

#     steps:
#     # Step 1: Check out the repository code
#     - name: Checkout code
#       uses: actions/checkout@v2

#     # Step 2: Set up Docker Buildx for multi-platform support
#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v2

#     # Step 3: Log in to Docker Hub using GitHub secrets for credentials
#     - name: Log in to Docker Hub
#       run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

#     # Step 4: Loop through services to build and push Docker images
#     - name: Build and Push Docker Images
#       run: |
#         services=("crypto_price_service" "transaction_service" "account_service")
#         for service in "${services[@]}"; do
#           echo "Processing $service..."
          
#           # Build Docker image for the service
#           docker build -t ${{ secrets.DOCKER_USERNAME }}/$service:latest ./src/$service
          
#           # Push Docker image to Docker Hub
#           docker push ${{ secrets.DOCKER_USERNAME }}/$service:latest
#         done

#     # Step 5: Clean up Docker resources after build to free space
#     - name: Clean up
#       run: |
#         docker system prune -af
name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Log in to AWS ECR
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 503561457120.dkr.ecr.eu-north-1.amazonaws.com

    - name: Build and Push Docker Images to Docker Hub and ECR
      run: |
        services=("crypto_price_service" "transaction_service" "account_service")
        for service in "${services[@]}"; do
          echo "Processing $service..."
          # Build Docker image for Docker Hub
          docker build -t ${{ secrets.DOCKER_USERNAME }}/$service:latest ./src/$service
          docker push ${{ secrets.DOCKER_USERNAME }}/$service:latest
         
          # Tag and push to AWS ECR
          docker tag ${{ secrets.DOCKER_USERNAME }}/$service:latest 503561457120.dkr.ecr.eu-north-1.amazonaws.com/$service:latest
          docker push 503561457120.dkr.ecr.eu-north-1.amazonaws.com/$service:latest
        done

    - name: Clean up Docker resources
      run: docker system prune -af